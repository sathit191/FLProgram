//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test2.WebServiceAPCS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineOnline", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum MachineOnline : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineOnlineStateResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MachineOnlineStateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum MessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Apcs = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApcsPro = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineProcessingState", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum MachineProcessingState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Setup = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Execute = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pause = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotSetUp = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateMachineStateResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateMachineStateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetupLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SetupLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.SetupLotResult.Status IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NgQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorNo {
            get {
                return this.ErrorNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorNoField, value) != true)) {
                    this.ErrorNoField = value;
                    this.RaisePropertyChanged("ErrorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodQty {
            get {
                return this.GoodQtyField;
            }
            set {
                if ((this.GoodQtyField.Equals(value) != true)) {
                    this.GoodQtyField = value;
                    this.RaisePropertyChanged("GoodQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.SetupLotResult.Status IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NgQty {
            get {
                return this.NgQtyField;
            }
            set {
                if ((this.NgQtyField.Equals(value) != true)) {
                    this.NgQtyField = value;
                    this.RaisePropertyChanged("NgQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipe {
            get {
                return this.RecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeField, value) != true)) {
                    this.RecipeField = value;
                    this.RaisePropertyChanged("Recipe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SetupLotResult.Status", Namespace="http://schemas.datacontract.org/2004/07/")]
        public enum Status : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pass = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotPass = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Warning = 2,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunMode", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum RunMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Separated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeparatedEnd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReRun = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class StartLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineStartResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OnlineStartResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineEndResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class OnlineEndResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Judge", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum Judge : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NG = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFirstinspectionResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateFirstinspectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class EndLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFinalinspectionResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateFinalinspectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmState", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum AlarmState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RESET = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SET = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineAlarmResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MachineAlarmResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CancelLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndMode", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum EndMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbnormalEndReset = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbnormalEndAccumulate = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReinputResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ReinputResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckLotApcsProResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CheckLotApcsProResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test2.WebServiceAPCS.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubFunction {
            get {
                return this.SubFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubFunctionField, value) != true)) {
                    this.SubFunctionField = value;
                    this.RaisePropertyChanged("SubFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test2.WebServiceAPCS.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceAPCS.IServiceiLibrary")]
    public interface IServiceiLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/MachineOnlineState", ReplyAction="http://tempuri.org/IServiceiLibrary/MachineOnlineStateResponse")]
        test2.WebServiceAPCS.MachineOnlineStateResult MachineOnlineState(string mcNo, test2.WebServiceAPCS.MachineOnline online);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateMachineState", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateMachineStateResponse")]
        test2.WebServiceAPCS.UpdateMachineStateResult UpdateMachineState(string mcNo, test2.WebServiceAPCS.MachineProcessingState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLot", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotResponse")]
        test2.WebServiceAPCS.SetupLotResult SetupLot(string lotNo, string mcNo, string opNo, string processName, string layerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLotNoCheckLicenser", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotNoCheckLicenserResponse")]
        test2.WebServiceAPCS.SetupLotResult SetupLotNoCheckLicenser(string lotNo, string mcNo, string opNo, string processName, string layerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLotCustomMode", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotCustomModeResponse")]
        test2.WebServiceAPCS.SetupLotResult SetupLotCustomMode(string lotNo, string mcNo, string opNo, string processName, string layerNo, test2.WebServiceAPCS.RunMode runMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLotCustomModeNoCheckLicenser", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotCustomModeNoCheckLicenserResponse")]
        test2.WebServiceAPCS.SetupLotResult SetupLotCustomModeNoCheckLicenser(string lotNo, string mcNo, string opNo, string processName, string layerNo, test2.WebServiceAPCS.RunMode runMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLotOven", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotOvenResponse")]
        test2.WebServiceAPCS.SetupLotResult SetupLotOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, string processName, string layerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/StartLot", ReplyAction="http://tempuri.org/IServiceiLibrary/StartLotResponse")]
        test2.WebServiceAPCS.StartLotResult StartLot(string lotNo, string mcNo, string opNo, string recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/StartLotCustomMode", ReplyAction="http://tempuri.org/IServiceiLibrary/StartLotCustomModeResponse")]
        test2.WebServiceAPCS.StartLotResult StartLotCustomMode(string lotNo, string mcNo, string opNo, string recipe, test2.WebServiceAPCS.RunMode runMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/StartLotOven", ReplyAction="http://tempuri.org/IServiceiLibrary/StartLotOvenResponse")]
        test2.WebServiceAPCS.StartLotResult StartLotOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, string recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/OnlineStart", ReplyAction="http://tempuri.org/IServiceiLibrary/OnlineStartResponse")]
        test2.WebServiceAPCS.OnlineStartResult OnlineStart(string lotNo, string mcNo, string opNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/OnlineEnd", ReplyAction="http://tempuri.org/IServiceiLibrary/OnlineEndResponse")]
        test2.WebServiceAPCS.OnlineEndResult OnlineEnd(string lotNo, string mcNo, string opNo, int good, int ng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateFirstinspection", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateFirstinspectionResponse")]
        test2.WebServiceAPCS.UpdateFirstinspectionResult UpdateFirstinspection(string lotNo, string opNo, test2.WebServiceAPCS.Judge judge, string mcNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/EndLot", ReplyAction="http://tempuri.org/IServiceiLibrary/EndLotResponse")]
        test2.WebServiceAPCS.EndLotResult EndLot(string lotNo, string mcNo, string opNo, int good, int ng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/EndLotNoCheckLicenser", ReplyAction="http://tempuri.org/IServiceiLibrary/EndLotNoCheckLicenserResponse")]
        test2.WebServiceAPCS.EndLotResult EndLotNoCheckLicenser(string lotNo, string mcNo, string opNo, int good, int ng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/EndLotOven", ReplyAction="http://tempuri.org/IServiceiLibrary/EndLotOvenResponse")]
        test2.WebServiceAPCS.EndLotResult EndLotOven(string lotNo, string mcNoApcs, string mcNoApcsPro, string opNo, int good, int ng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateFinalinspection", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateFinalinspectionResponse")]
        test2.WebServiceAPCS.UpdateFinalinspectionResult UpdateFinalinspection(string lotNo, string opNo, test2.WebServiceAPCS.Judge judge, string mcNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/MachineAlarm", ReplyAction="http://tempuri.org/IServiceiLibrary/MachineAlarmResponse")]
        test2.WebServiceAPCS.MachineAlarmResult MachineAlarm(string lotNo, string mcNo, string opNo, string AlarmNo, test2.WebServiceAPCS.AlarmState alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/CancelLot", ReplyAction="http://tempuri.org/IServiceiLibrary/CancelLotResponse")]
        test2.WebServiceAPCS.CancelLotResult CancelLot(string mcNo, string lotNo, string opNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/Reinput", ReplyAction="http://tempuri.org/IServiceiLibrary/ReinputResponse")]
        test2.WebServiceAPCS.ReinputResult Reinput(string lotNo, string mcNo, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/ReinputAndHoldLot", ReplyAction="http://tempuri.org/IServiceiLibrary/ReinputAndHoldLotResponse")]
        test2.WebServiceAPCS.ReinputResult ReinputAndHoldLot(string lotNo, string mcNo, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/ReinputOven", ReplyAction="http://tempuri.org/IServiceiLibrary/ReinputOvenResponse")]
        test2.WebServiceAPCS.ReinputResult ReinputOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/CheckLotApcsProManual", ReplyAction="http://tempuri.org/IServiceiLibrary/CheckLotApcsProManualResponse")]
        test2.WebServiceAPCS.CheckLotApcsProResult CheckLotApcsProManual(string lotNo, string mcNo, string package);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceiLibraryChannel : test2.WebServiceAPCS.IServiceiLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceiLibraryClient : System.ServiceModel.ClientBase<test2.WebServiceAPCS.IServiceiLibrary>, test2.WebServiceAPCS.IServiceiLibrary {
        
        public ServiceiLibraryClient() {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceiLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public test2.WebServiceAPCS.MachineOnlineStateResult MachineOnlineState(string mcNo, test2.WebServiceAPCS.MachineOnline online) {
            return base.Channel.MachineOnlineState(mcNo, online);
        }
        
        public test2.WebServiceAPCS.UpdateMachineStateResult UpdateMachineState(string mcNo, test2.WebServiceAPCS.MachineProcessingState state) {
            return base.Channel.UpdateMachineState(mcNo, state);
        }
        
        public test2.WebServiceAPCS.SetupLotResult SetupLot(string lotNo, string mcNo, string opNo, string processName, string layerNo) {
            return base.Channel.SetupLot(lotNo, mcNo, opNo, processName, layerNo);
        }
        
        public test2.WebServiceAPCS.SetupLotResult SetupLotNoCheckLicenser(string lotNo, string mcNo, string opNo, string processName, string layerNo) {
            return base.Channel.SetupLotNoCheckLicenser(lotNo, mcNo, opNo, processName, layerNo);
        }
        
        public test2.WebServiceAPCS.SetupLotResult SetupLotCustomMode(string lotNo, string mcNo, string opNo, string processName, string layerNo, test2.WebServiceAPCS.RunMode runMode) {
            return base.Channel.SetupLotCustomMode(lotNo, mcNo, opNo, processName, layerNo, runMode);
        }
        
        public test2.WebServiceAPCS.SetupLotResult SetupLotCustomModeNoCheckLicenser(string lotNo, string mcNo, string opNo, string processName, string layerNo, test2.WebServiceAPCS.RunMode runMode) {
            return base.Channel.SetupLotCustomModeNoCheckLicenser(lotNo, mcNo, opNo, processName, layerNo, runMode);
        }
        
        public test2.WebServiceAPCS.SetupLotResult SetupLotOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, string processName, string layerNo) {
            return base.Channel.SetupLotOven(lotNo, mcNoApcsPro, mcNoApcs, opNo, processName, layerNo);
        }
        
        public test2.WebServiceAPCS.StartLotResult StartLot(string lotNo, string mcNo, string opNo, string recipe) {
            return base.Channel.StartLot(lotNo, mcNo, opNo, recipe);
        }
        
        public test2.WebServiceAPCS.StartLotResult StartLotCustomMode(string lotNo, string mcNo, string opNo, string recipe, test2.WebServiceAPCS.RunMode runMode) {
            return base.Channel.StartLotCustomMode(lotNo, mcNo, opNo, recipe, runMode);
        }
        
        public test2.WebServiceAPCS.StartLotResult StartLotOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, string recipe) {
            return base.Channel.StartLotOven(lotNo, mcNoApcsPro, mcNoApcs, opNo, recipe);
        }
        
        public test2.WebServiceAPCS.OnlineStartResult OnlineStart(string lotNo, string mcNo, string opNo) {
            return base.Channel.OnlineStart(lotNo, mcNo, opNo);
        }
        
        public test2.WebServiceAPCS.OnlineEndResult OnlineEnd(string lotNo, string mcNo, string opNo, int good, int ng) {
            return base.Channel.OnlineEnd(lotNo, mcNo, opNo, good, ng);
        }
        
        public test2.WebServiceAPCS.UpdateFirstinspectionResult UpdateFirstinspection(string lotNo, string opNo, test2.WebServiceAPCS.Judge judge, string mcNo) {
            return base.Channel.UpdateFirstinspection(lotNo, opNo, judge, mcNo);
        }
        
        public test2.WebServiceAPCS.EndLotResult EndLot(string lotNo, string mcNo, string opNo, int good, int ng) {
            return base.Channel.EndLot(lotNo, mcNo, opNo, good, ng);
        }
        
        public test2.WebServiceAPCS.EndLotResult EndLotNoCheckLicenser(string lotNo, string mcNo, string opNo, int good, int ng) {
            return base.Channel.EndLotNoCheckLicenser(lotNo, mcNo, opNo, good, ng);
        }
        
        public test2.WebServiceAPCS.EndLotResult EndLotOven(string lotNo, string mcNoApcs, string mcNoApcsPro, string opNo, int good, int ng) {
            return base.Channel.EndLotOven(lotNo, mcNoApcs, mcNoApcsPro, opNo, good, ng);
        }
        
        public test2.WebServiceAPCS.UpdateFinalinspectionResult UpdateFinalinspection(string lotNo, string opNo, test2.WebServiceAPCS.Judge judge, string mcNo) {
            return base.Channel.UpdateFinalinspection(lotNo, opNo, judge, mcNo);
        }
        
        public test2.WebServiceAPCS.MachineAlarmResult MachineAlarm(string lotNo, string mcNo, string opNo, string AlarmNo, test2.WebServiceAPCS.AlarmState alarm) {
            return base.Channel.MachineAlarm(lotNo, mcNo, opNo, AlarmNo, alarm);
        }
        
        public test2.WebServiceAPCS.CancelLotResult CancelLot(string mcNo, string lotNo, string opNo) {
            return base.Channel.CancelLot(mcNo, lotNo, opNo);
        }
        
        public test2.WebServiceAPCS.ReinputResult Reinput(string lotNo, string mcNo, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode) {
            return base.Channel.Reinput(lotNo, mcNo, opNo, good, ng, endMode);
        }
        
        public test2.WebServiceAPCS.ReinputResult ReinputAndHoldLot(string lotNo, string mcNo, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode) {
            return base.Channel.ReinputAndHoldLot(lotNo, mcNo, opNo, good, ng, endMode);
        }
        
        public test2.WebServiceAPCS.ReinputResult ReinputOven(string lotNo, string mcNoApcsPro, string mcNoApcs, string opNo, int good, int ng, test2.WebServiceAPCS.EndMode endMode) {
            return base.Channel.ReinputOven(lotNo, mcNoApcsPro, mcNoApcs, opNo, good, ng, endMode);
        }
        
        public test2.WebServiceAPCS.CheckLotApcsProResult CheckLotApcsProManual(string lotNo, string mcNo, string package) {
            return base.Channel.CheckLotApcsProManual(lotNo, mcNo, package);
        }
    }
}
